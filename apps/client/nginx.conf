server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files directly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the backend server
    # Assumes VITE_BASE_URL in client code is set to "/api"
    location /api/ {
        # The resolver is needed for Docker service discovery if using variables in proxy_pass
        # resolver 127.0.0.11 valid=30s; # Docker's embedded DNS server
        # set $backend_server http://server:4000; # Get server address from docker-compose

        # If backend server is named 'server' and listens on port 4000 in docker-compose network:
        proxy_pass http://server:4000/; # Note the trailing slash

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Optional: Add headers for security, caching, etc.
    # add_header X-Frame-Options "SAMEORIGIN";
    # add_header X-Content-Type-Options "nosniff";
    # add_header X-XSS-Protection "1; mode=block";

    # Optional: Gzip compression
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}