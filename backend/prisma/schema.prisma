// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Make sure DATABASE_URL is in your .env file
}

model User {
  id        Int      @id @default(autoincrement()) 
  name      String   @unique
  email     String   @unique                      
  password  String   
  cartData  Json   @default("{}") 
  createdAt DateTime @default(now())              
  updatedAt DateTime @updatedAt                  
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  imageUrl    String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  sizes       String[]
  categoryId  Int?
  category    Category?    @relation(fields: [categoryId], references: [id])

  subcategoryId Int?         // Optional: If a product is tied to a subcategory
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subcategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[] // Relation to the Product model  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}