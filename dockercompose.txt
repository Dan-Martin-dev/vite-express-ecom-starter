services:
  client:
    build:
      context: ../..  # Monorepo root relative to this compose file
      dockerfile: apps/client/Dockerfile
      args:
        VITE_BASE_URL: /api # API will be proxied by Nginx
    container_name: ecommerce_client
    ports:
      - "80:80" # Standard HTTP port for client
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - ecommerce_network

  server:
    build:
      context: ../.. # Monorepo root
      dockerfile: apps/server/Dockerfile
    container_name: ecommerce_server
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-ecommercedb}
      POCKETBASE_URL: http://pocketbase:8090
    ports:
      - "4000:4000" # Optional: Only needed if accessing server directly
    depends_on:
      postgres:
        condition: service_healthy
      pocketbase:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:4000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: ecommerce_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ecommercedb}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Expose if you need to connect from host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-ecommercedb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ecommerce_network

  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    container_name: ecommerce_pocketbase
    # The command format was incorrect - need to use this exact format
    command: ["--http=0.0.0.0:8090", "--dir=/pb_data"] 
    ports:
      - "8090:8090"
    # Simplified environment variables - using only what's necessary
    environment:
      - TZ=UTC
    volumes:
      - pb_data:/pb_data
    restart: unless-stopped
    networks:
      - ecommerce_network
    # Better healthcheck that matches how it actually runs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8090/_/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
volumes:
  pgdata:
  pb_data:

networks:
  ecommerce_network:
    driver: bridge