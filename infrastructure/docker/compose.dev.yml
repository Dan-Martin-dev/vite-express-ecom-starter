# For infrastructure/docker/compose.dev.yml
services:
  client:
    build:
      context: ../../
      dockerfile: apps/client/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:4000/api}
    container_name: ecommerce_client
    ports:
      - "3000:80"
    volumes:
      - ../../apps/client:/app/apps/client
      - /app/apps/client/node_modules
    depends_on:
      - server
    networks:
      - ecom-network-dev
    environment:
      - NODE_ENV=development

  server:
    build:
      context: ../../
      dockerfile: apps/server/Dockerfile
    container_name: ecommerce_server
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=4000
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      - POCKETBASE_URL=http://pocketbase:8090
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "4000:4000"
    volumes:
      - ../../apps/server:/app/apps/server
      - /app/apps/server/node_modules
      - /app/apps/server/dist
    depends_on:
      postgres:
        condition: service_healthy
      pocketbase:
        condition: service_healthy
    networks:
      - ecom-network-dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:4000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: ecommerce_postgres
    env_file:
      - ../../.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ../../infrastructure/postgres/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecom-network-dev

  pocketbase:
    image: spectado/pocketbase:latest
    container_name: ecommerce_pocketbase
    volumes:
      - pocketbase_data_dev:/pb_data
    ports:
      - "8090:8090"
    command: ["serve", "--http=0.0.0.0:8090"]
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 sh -c 'until nc -z localhost 8090; do sleep 1; done'"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ecom-network-dev

networks:
  ecom-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
  pocketbase_data_dev: