# For infrastructure/docker/compose.prod.yml
version: '3.8'

services:
  client:
    image: ${DOCKER_REGISTRY:-ghcr.io}/${DOCKER_USERNAME:-username}/ecom-client:${TAG:-latest}
    container_name: ecommerce_client
    restart: always
    ports:
      - "${CLIENT_PORT:-80}:80"
    depends_on:
      - server
    networks:
      - ecom-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  server:
    image: ${DOCKER_REGISTRY:-ghcr.io}/${DOCKER_USERNAME:-username}/ecom-server:${TAG:-latest}
    container_name: ecommerce_server
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=${SERVER_PORT:-4000}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-ecomdb}
      - POCKETBASE_URL=http://pocketbase:8090
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-ecomdb}
    ports:
      - "${SERVER_PORT:-4000}:4000"
    depends_on:
      postgres:
        condition: service_healthy
      pocketbase:
        condition: service_healthy
    networks:
      - ecom-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  postgres:
    image: postgres:16-alpine
    container_name: ecommerce_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ecomdb}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../postgres/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-ecomdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecom-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    container_name: ecommerce_pocketbase
    restart: always
    volumes:
      - pocketbase_data:/pb_data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ecom-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

networks:
  ecom-network:
    driver: bridge

volumes:
  postgres_data:
  pocketbase_data: